[{"C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\index.js":"1","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\App.js":"2","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\reportWebVitals.js":"3","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Dashboard\\index.js":"4","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\SaveHistoricalData\\index.js":"5","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\ShowLoanCase\\index.js":"6","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Login\\index.js":"7","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Signup\\index.js":"8","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Dashboard\\Header.js":"9","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Dashboard\\Add.js":"10","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\data\\index.js":"11"},{"size":554,"mtime":1651680030992,"results":"12","hashOfConfig":"13"},{"size":839,"mtime":1651676197760,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1651676197768,"results":"15","hashOfConfig":"13"},{"size":766,"mtime":1651676197761,"results":"16","hashOfConfig":"13"},{"size":12077,"mtime":1651728754006,"results":"17","hashOfConfig":"13"},{"size":9226,"mtime":1651728982809,"results":"18","hashOfConfig":"13"},{"size":2484,"mtime":1651676197763,"results":"19","hashOfConfig":"13"},{"size":3949,"mtime":1651677715042,"results":"20","hashOfConfig":"13"},{"size":1310,"mtime":1651725492288,"results":"21","hashOfConfig":"13"},{"size":14924,"mtime":1651728776032,"results":"22","hashOfConfig":"13"},{"size":469,"mtime":1651676197766,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1ad7kgy",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\index.js",[],[],[],"C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\App.js",[],[],"C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\reportWebVitals.js",[],[],"C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Dashboard\\index.js",[],[],"C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\SaveHistoricalData\\index.js",["63","64","65"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios'\r\nimport Select from 'react-select'\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nfunction SaveData({ users, setUsers, setIsAdding }) {\r\n  const navigate = useNavigate()\r\n    const [salary, setSalary] = useState('');\r\n    const [loan_amnt, setloan_amnt] = useState('');\r\n    const [term, setterm] = useState(['36 months', '60 months']);\r\n    const [empl_length, setemp_length] = useState('');\r\n    const [home_ownersh, sethome_ownersh] = useState(['RENT', 'OWN', 'MORTGAGE', 'OTHER', 'NONE', 'ANY']);\r\n    const [purpose, setpurpose] = useState(['credit_card', 'car', 'small_business', 'other', 'wedding',\r\n        'debt_consolidation', 'home_improvement', 'major_purchase',\r\n        'medical', 'moving', 'vacation', 'house', 'renewable_energy',\r\n        'educational']);\r\n    const [city, setcity] = useState(['AZ', 'GA', 'IL', 'CA', 'TX', 'VA', 'MO', 'CT', 'UT', 'FL', 'NY',\r\n        'PA', 'MN', 'NJ', 'OR', 'KY', 'OH', 'SC', 'RI', 'LA', 'MA', 'WA',\r\n        'WI', 'AL', 'NV', 'CO', 'MD', 'WV', 'VT', 'MI', 'DC', 'SD', 'NC',\r\n        'AR', 'KS', 'NM', 'HI', 'AK', 'OK', 'MT', 'WY', 'NH', 'DE', 'MS',\r\n        'TN', 'IA', 'NE', 'ID', 'IN', 'ME']);\r\n    const [dti, setdti] = useState('');\r\n    const [delinq, setdelinq] = useState('');\r\n    const [revol, setrevol] = useState('');\r\n    const [totalacc, settotalacc] = useState('');\r\n    const [prevcreditlength, setprevcreditlength] = useState('');\r\n    const [verificationStatus, setverificationStatus] = useState(['verified', 'not verified'])\r\n    const [loan_verification, setloan_verification] = useState(['Y', 'N'])\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const textInput = useRef(null);\r\n\r\n    const loan_verification_options= [\r\n        { value: 'Y', label: 'Y' },\r\n        { value: 'N', label: 'N' }\r\n    ]\r\n    const home_ownership_options = [\r\n        { value: 'MORTGAGE', label: 'MORTGAGE' },\r\n        { value: 'RENT', label: 'RENT' },\r\n        { value: 'OTHER', label: 'OTHER' },\r\n        { value: 'NONE', label: 'NONE' },\r\n        { value: 'ANY', label: 'ANY' },\r\n        { value: 'OWN', label: 'OWN' }\r\n    ]\r\n\r\n    const purpose_options = [\r\n        { value: 'credit_card', label: 'credit_card' },\r\n        { value: 'car', label: 'car' },\r\n        { value: 'small_business', label: 'small_business' },\r\n        { value: 'other', label: 'other' },\r\n        { value: 'wedding', label: 'wedding' },\r\n        { value: 'debt_consolidation', label: 'debt_consolidation' },\r\n        { value: 'home_improvement', label: 'home_improvement' },\r\n        { value: 'major_purchase', label: 'major_purchase' },\r\n        { value: 'medical', label: 'medical' },\r\n        { value: 'moving', label: 'moving' },\r\n        { value: 'vacation', label: 'vacation' },\r\n        { value: 'house', label: 'house' },\r\n        { value: 'renewable_energy', label: 'renewable_energy' },\r\n        { value: 'educational', label: 'educational' }\r\n    ]\r\n    const term_options = [\r\n        { value: '36 months', label: '36 months' },\r\n        { value: '60 months', label: '60 months' }\r\n    ]\r\n    const verification_status_options = [\r\n        { value: 'not verified', label: 'not verified' },\r\n        { value: 'verified', label: 'verified' },\r\n    ]\r\n\r\n    const addr_state_options = [\r\n        { value: 'AZ', label: 'AZ' },\r\n        { value: 'GA', label: 'GA' },\r\n        { value: 'IL', label: 'IL' },\r\n        { value: 'CA', label: 'CA' },\r\n        { value: 'TX', label: 'TX' },\r\n        { value: 'VA', label: 'VA' },\r\n        { value: 'MO', label: 'MO' },\r\n        { value: 'CT', label: 'CT' },\r\n        { value: 'UT', label: 'UT' },\r\n        { value: 'FL', label: 'FL' },\r\n        { value: 'NY', label: 'NY' },\r\n        { value: 'PA', label: 'PA' },\r\n        { value: 'MN', label: 'MN' },\r\n        { value: 'NJ', label: 'NJ' },\r\n        { value: 'OR', label: 'OR' },\r\n        { value: 'KY', label: 'KY' },\r\n        { value: 'OH', label: 'OH' },\r\n        { value: 'SC', label: 'SC' },\r\n        { value: 'RI', label: 'RI' },\r\n        { value: 'LA', label: 'LA' },\r\n        { value: 'MA', label: 'MA' },\r\n        { value: 'WA', label: 'WA' },\r\n        { value: 'WI', label: 'WI' },\r\n        { value: 'AL', label: 'AL' },\r\n        { value: 'NV', label: 'NV' },\r\n        { value: 'CO', label: 'CO' },\r\n        { value: 'MD', label: 'MD' },\r\n        { value: 'WV', label: 'WV' },\r\n        { value: 'VT', label: 'VT' },\r\n        { value: 'MI', label: 'MI' },\r\n        { value: 'DC', label: 'DC' },\r\n        { value: 'SD', label: 'SD' }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        textInput.current.focus();\r\n    }, [])\r\n\r\n    const handleSave = async (e) => {\r\n        //const id = users.length + 1;\r\n\r\n            let params = {\r\n                'annual_inc': salary,\r\n                'loan_amnt': loan_amnt,\r\n                'term': term['value'],\r\n                'emp_length': empl_length,\r\n                'home_ownership': home_ownersh['value'],\r\n                'purpose': purpose['value'],\r\n                'addr_state': city['value'],\r\n                'dti': dti,\r\n                'delinq_2yrs': delinq,\r\n                'revol_util': revol,\r\n                'total_acc': totalacc,\r\n                'longest_credit_length': prevcreditlength,\r\n                'verification_status': verificationStatus['value'],\r\n                'loan_verification': loan_verification['value']\r\n            }\r\n            const result = await axios.post(\"http://localhost:8081/saveHistoricalRecord\", params);\r\n            if (result['data'] === -1) {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Results\",\r\n                    text: `Error occurred while saving the record!`,\r\n                    showConfirmButton: true,\r\n                    //timer:1500\r\n\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Results\",\r\n                    text: `Case ID : ` + result['data'],\r\n                    showConfirmButton: true,\r\n                    //timer:1500\r\n\r\n                })\r\n            }\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"small-container\">\r\n            <form onSubmit={handleSave}>\r\n                <h1>Predict Case</h1>\r\n                <label htmlFor=\"salary\">Annual income ($)</label>\r\n                <input\r\n                    id=\"salary\"\r\n                    type=\"number\"\r\n                    name=\"salary\"\r\n                    ref={textInput}\r\n                    value={salary}\r\n                    onChange={e => setSalary(e.target.value)}\r\n                />\r\n                <label htmlFor=\"loan_amnt\">Requested loan amount ($)</label>\r\n                <input\r\n                    id=\"loan_amnt\"\r\n                    type=\"loan_amnt\"\r\n                    name=\"loan_amnt\"\r\n                    value={loan_amnt}\r\n                    onChange={e => setloan_amnt(e.target.value)}\r\n                />\r\n                <label htmlFor=\"term\">Loan term length (months)</label>\r\n                <Select\r\n                    options={term_options}\r\n                    id=\"term\"\r\n                    type=\"term\"\r\n                    name=\"term\"\r\n                    value={term}\r\n                    onChange={e => setterm(e)}\r\n                />\r\n                <label htmlFor=\"empl_length\">Employee Length</label>\r\n                <input\r\n                    id=\"empl_length\"\r\n                    type=\"empl_length\"\r\n                    name=\"empl_length\"\r\n                    value={empl_length}\r\n                    onChange={e => setemp_length(e.target.value)}\r\n                />\r\n                <label htmlFor=\"home_ownersh\">Housing status</label>\r\n\r\n                <Select\r\n                    options={home_ownership_options}\r\n                    //id=\"home_ownersh\"\r\n                    //type=\"home_ownersh\"\r\n                    //name=\"home_ownersh\"\r\n                    value={home_ownersh}\r\n                    onChange={e => sethome_ownersh(e)}\r\n                />\r\n                <label htmlFor=\"purpose\">Purpose of loan</label>\r\n                <Select\r\n                    options={purpose_options}\r\n                    id=\"purpose\"\r\n                    type=\"purpose\"\r\n                    name=\"purpose\"\r\n                    value={purpose}\r\n                    onChange={e => setpurpose(e)}\r\n                />\r\n                <label htmlFor=\"city\">State of residence</label>\r\n                <Select\r\n                    options={addr_state_options}\r\n                    id=\"city\"\r\n                    type=\"city\"\r\n                    name=\"city\"\r\n                    value={city}\r\n                    onChange={e => setcity(e)}\r\n                />\r\n                <label htmlFor=\"dti\">Debt to income ratio</label>\r\n                <input\r\n                    id=\"dti\"\r\n                    type=\"dti\"\r\n                    name=\"dti\"\r\n                    value={dti}\r\n                    onChange={e => setdti(e.target.value)}\r\n                />\r\n                <label htmlFor=\"delinq\">Number of misdemeanor in the past 2 years</label>\r\n                <input\r\n                    id=\"delinq\"\r\n                    type=\"delinq\"\r\n                    name=\"delinq\"\r\n                    value={delinq}\r\n                    onChange={e => setdelinq(e.target.value)}\r\n                />\r\n                <label htmlFor=\"revol\">Revolving credit line utilized</label>\r\n                <input\r\n                    id=\"revol\"\r\n                    type=\"revol\"\r\n                    name=\"revol\"\r\n                    value={revol}\r\n                    onChange={e => setrevol(e.target.value)}\r\n                />\r\n                <label htmlFor=\"totalacc\">Total accounts (number of credit lines)</label>\r\n                <input\r\n                    id=\"totalacc\"\r\n                    type=\"totalacc\"\r\n                    name=\"totalacc\"\r\n                    value={totalacc}\r\n                    onChange={e => settotalacc(e.target.value)}\r\n                />\r\n                <label htmlFor=\"prevcreditlength\">Age of oldest active account</label>\r\n                <input\r\n                    id=\"prevcreditlength\"\r\n                    type=\"prevcreditlength\"\r\n                    name=\"prevcreditlength\"\r\n                    value={prevcreditlength}\r\n                    onChange={e => setprevcreditlength(e.target.value)}\r\n                />\r\n                <label htmlFor=\"verificationStatus\">Income verification status</label>\r\n                <Select\r\n                    options={verification_status_options}\r\n                    id=\"verificationStatus\"\r\n                    type=\"verificationStatus\"\r\n                    name=\"verificationStatus\"\r\n                    value={verificationStatus}\r\n                    onChange={e => setverificationStatus(e)}\r\n                />\r\n                <label htmlFor=\"verificationStatus\">Loan verification status</label>\r\n                <Select\r\n                    options={loan_verification_options}\r\n                    id=\"loan_verification\"\r\n                    type=\"loan_verification\"\r\n                    name=\"loan_verification\"\r\n                    value={loan_verification}\r\n                    onChange={e => setloan_verification(e)}\r\n                />\r\n\r\n                <div style={{ marginTop: '30px' }}>\r\n                    <button\r\n                        style={{ marginLeft: '12px' }}\r\n                        type=\"button\"\r\n                        value=\"Save\"\r\n                        onClick={handleSave}\r\n                    >Save</button>\r\n                    <button\r\n                        style={{ marginLeft: '12px' }}\r\n                        type=\"button\"\r\n                        value=\"Cancel\"\r\n                        onClick={() => navigate('/dashboard')}\r\n                    >Cancel</button>\r\n                    \r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SaveData;\r\n","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\ShowLoanCase\\index.js",["66","67","68"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport './index.css'\r\n\r\nfunction ShowCase() {\r\n    const navigate = useNavigate()\r\n  const [id, setId] = useState('');\r\n\r\n  const textInput = useRef(null);\r\n  let salary=null;\r\n    let loan_amnt=null;\r\n    let term=null;\r\n    let empl_length=null;\r\n    let home_ownersh=null;\r\n    let purpose=null;\r\n    let city=null;\r\n    let dti=null;\r\n    let delinq=null;\r\n    let revol=null\r\n    let totalacc=null;\r\n    let prevcreditlength=null;\r\n    let verificationStatus=null;\r\n    let loan_verification=null;\r\n    let confidence=null;\r\n    let interest_rate=null;\r\n  const handleFetch = async () => {\r\n\r\n      const userData = await axios.get(\"http://localhost:8081/getCase\", {\r\n          params: {\r\n              \"caseID\": id\r\n          }\r\n\r\n      });\r\n      let loanCase;\r\n      loanCase=userData['data']\r\n      loan_amnt=loanCase['loan_amnt']\r\n      term=loanCase['term']\r\n      empl_length=loanCase['emp_length']\r\n      home_ownersh=loanCase['home_ownership']\r\n      salary=loanCase['annual_inc']\r\n      purpose=loanCase['purpose']\r\n      revol=loanCase['revol_util']\r\n      dti=loanCase['dti']\r\n      totalacc=loanCase['total_acc']\r\n      prevcreditlength=loanCase['longest_credit_length']\r\n      verificationStatus=loanCase['verification_status']\r\n      city=loanCase['addr_state']\r\n      delinq=loanCase['delinq_2yrs']\r\n      loan_verification=loanCase['prediction']\r\n      interest_rate=loanCase['interest_rate']\r\n      confidence=loanCase['confidence'];\r\n      return(\r\n          <div className=\"small-container\">\r\n                  <h1>Case Information</h1>\r\n                  <label htmlFor=\"salary\">Annual income ($)</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"salary\"\r\n                      type=\"number\"\r\n                      name=\"salary\"\r\n                      ref={textInput}\r\n                      value={salary}\r\n                      //onChange={e => setSalary(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"loan_amnt\">Requested loan amount ($)</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"loan_amnt\"\r\n                      type=\"loan_amnt\"\r\n                      name=\"loan_amnt\"\r\n                      value={loan_amnt}\r\n                      //onChange={e => setloan_amnt(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"term\">Loan term length (months)</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"term\"\r\n                      type=\"term\"\r\n                      name=\"term\"\r\n                      value={term}\r\n                      //onChange={e => setterm(e)}\r\n                  />\r\n                  <label htmlFor=\"empl_length\">Employee Length</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"empl_length\"\r\n                      type=\"empl_length\"\r\n                      name=\"empl_length\"\r\n                      value={empl_length}\r\n                      //onChange={e => setemp_length(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"home_ownersh\">Housing status</label>\r\n\r\n                  <input\r\n                      disabled={true}\r\n                      //id=\"home_ownersh\"\r\n                      //type=\"home_ownersh\"\r\n                      //name=\"home_ownersh\"\r\n                      value={home_ownersh}\r\n                      //onChange={e => sethome_ownersh(e)}\r\n                  />\r\n                  <label htmlFor=\"purpose\">Purpose of loan</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"purpose\"\r\n                      type=\"purpose\"\r\n                      name=\"purpose\"\r\n                      value={purpose}\r\n                      //onChange={e => setpurpose(e)}\r\n                  />\r\n                  <label htmlFor=\"city\">State of residence</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"city\"\r\n                      type=\"city\"\r\n                      name=\"city\"\r\n                      value={city}\r\n                      //onChange={e => setcity(e)}\r\n                  />\r\n                  <label htmlFor=\"dti\">Debt to income ratio</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"dti\"\r\n                      type=\"dti\"\r\n                      name=\"dti\"\r\n                      value={dti}\r\n                      //onChange={e => setdti(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"delinq\">Number of misdemeanor in the past 2 years</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"delinq\"\r\n                      type=\"delinq\"\r\n                      name=\"delinq\"\r\n                      value={delinq}\r\n                      //onChange={e => setdelinq(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"revol\">Revolving credit line utilized</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"revol\"\r\n                      type=\"revol\"\r\n                      name=\"revol\"\r\n                      value={revol}\r\n                      //onChange={e => setrevol(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"totalacc\">Total accounts (number of credit lines)</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"totalacc\"\r\n                      type=\"totalacc\"\r\n                      name=\"totalacc\"\r\n                      value={totalacc}\r\n                      //onChange={e => settotalacc(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"prevcreditlength\">Age of oldest active account</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"prevcreditlength\"\r\n                      type=\"prevcreditlength\"\r\n                      name=\"prevcreditlength\"\r\n                      value={prevcreditlength}\r\n                      //onChange={e => setprevcreditlength(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"verificationStatus\">Income verification status</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"verificationStatus\"\r\n                      type=\"verificationStatus\"\r\n                      name=\"verificationStatus\"\r\n                      value={verificationStatus}\r\n                      //onChange={e => setverificationStatus(e)}\r\n                  />\r\n                  <label htmlFor=\"verificationStatus\">Loan verification status</label>\r\n                  <input\r\n                      disabled={true}\r\n                      id=\"loan_verification\"\r\n                      type=\"loan_verification\"\r\n                      name=\"loan_verification\"\r\n                      value={loan_verification}\r\n                      //onChange={e => setloan_verification(e)}\r\n                  />\r\n              <label htmlFor=\"confidence\">Confidence</label>\r\n              <input\r\n                  disabled={true}\r\n                  id=\"confidence\"\r\n                  type=\"confidence\"\r\n                  name=\"confidence\"\r\n                  value={confidence}\r\n                  //onChange={e => setconfidence(e.target.value)}\r\n              />\r\n              <label htmlFor=\"interest_rate\">Predicted Interest Rate</label>\r\n              <input\r\n                  disabled={true}\r\n                  id=\"interest_rate\"\r\n                  type=\"interest_rate\"\r\n                  name=\"interest_rate\"\r\n                  value={interest_rate}\r\n                  //onChange={e => setinterest_rate(e.target.value)}\r\n              />\r\n\r\n                  <div style={{ marginTop: '30px' }}>\r\n                      <input\r\n                          style={{ marginLeft: '12px' }}\r\n                          className=\"muted-button\"\r\n                          type=\"button\"\r\n                          value=\"Cancel\"\r\n                          onClick={() => navigate('/showData')}\r\n                      />\r\n\r\n\r\n                  </div>\r\n          </div>\r\n      )\r\n\r\n\r\n  }\r\n  return (\r\n    <div>\r\n        <form className=\"form\">\r\n        <label htmlFor=\"id\">Enter User ID</label>\r\n                <input\r\n                    id=\"id\"\r\n                    type=\"number\"\r\n                    name=\"id\"\r\n                    ref={textInput}\r\n                    value={id}\r\n                    onChange={e => setId(e.target.value)}\r\n                    \r\n                />\r\n                <button type=\"submit\" value=\"Submit\" onClick={handleFetch}>Submit</button>\r\n                <button\r\n                        style={{ marginLeft: '12px' }}\r\n                        type=\"button\"\r\n                        value=\"Cancel\"\r\n                        onClick={() => navigate('/dashboard')}\r\n                >Cancel</button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowCase;\r\n","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Login\\index.js",["69","70","71"],[],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'\r\nfunction Login() {\r\n  // React States\r\n  const navigate = useNavigate();\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n\r\n  const errors = {\r\n    uname: \"invalid username\",\r\n    pass: \"invalid password\"\r\n  };\r\n\r\n  const handleSubmit = async(event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n    \r\n    var { uname, pass } = document.forms[0];\r\n\r\n    const userData = await axios.get(\"http://localhost:8081/login\",{\r\n      params : {\r\n      \"username\": uname.value,\r\n        \"password\":pass.value\r\n    }\r\n\r\n  });\r\n\r\n    // Compare user info\r\n    console.log(userData)\r\n    if (userData['data']===true) {\r\n      setIsSubmitted(true);\r\n      console.log(uname,pass);\r\n      navigate('/Dashboard');\r\n    } else {\r\n      // Username not found\r\n      setErrorMessages({ name: \"uname\",\r\n        message: 'Invalid username or password' });\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n  const handleSignup=() =>{\r\n    navigate('/signup');\r\n  }\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"uname\" required />\r\n          {renderErrorMessage(\"uname\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"pass\" required />\r\n          {renderErrorMessage(\"pass\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" value=\"Login\"/>\r\n        </div>\r\n        <div className=\"button-container\">\r\n        <button variant='contained' color='warning' size='small' className=\"round-button\"  onClick={handleSignup} sx={{ mt: 8 }}>SignUp</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Sign In</div>\r\n        {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Signup\\index.js",["72","73"],[],"import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport './index.css'\r\nimport { Navigate, NavLink, useNavigate } from 'react-router-dom';\r\nimport Swal from \"sweetalert2\";\r\nfunction Form() {\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleName = (e) => {\r\n        setName(e.target.value);\r\n        setSubmitted(false);\r\n    };\r\n\r\n    const handleEmail = (e) => {\r\n        setEmail(e.target.value);\r\n        setSubmitted(false);\r\n    };\r\n\r\n    const handlePassword = (e) => {\r\n        setPassword(e.target.value);\r\n        setSubmitted(false);\r\n    };\r\n\r\n    // Handling the form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (name !== '' && email !== '' && password !== '') {\r\n            setError(true);\r\n            const body = {\r\n                'fullName': name, 'emailID': email, 'password': password\r\n            }\r\n            const result = await axios.post(\"http://localhost:8081/registerUser\", body);\r\n            console.log(result);\r\n            if (result['status'] === 200) {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Results\",\r\n                    text: `User ID is ` + result['data'],\r\n                    showConfirmButton: true,\r\n                    //timer: 1500\r\n\r\n                })\r\n            }\r\n\r\n        } else {\r\n            console.log('Inside else');\r\n            setSubmitted(true);\r\n            setError(false);\r\n\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Results\",\r\n                text: 'Please enter all the fields.',\r\n                showConfirmButton: true,\r\n                //timer: 1500\r\n\r\n            })\r\n        }\r\n    };\r\n    const handleLogin = () => {\r\n        navigate(\"/\");\r\n    }\r\n\r\n    const successMessage = () => {\r\n        return (\r\n            <div\r\n                className=\"success\"\r\n                style={{\r\n                    display: submitted ? '' : 'none',\r\n                }}>\r\n                <h1>User {name} successfully registered!!</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const errorMessage = () => {\r\n        return (\r\n            <div\r\n                className=\"error\"\r\n                style={{\r\n                    display: error ? '' : 'none',\r\n                }}>\r\n                <h1>Please enter all the fields</h1>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <div>\r\n                <h1>User Registration</h1>\r\n            </div>\r\n\r\n            {/* Calling to the methods */}\r\n            <div className=\"messages\">\r\n                {errorMessage()}\r\n                {successMessage()}\r\n            </div>\r\n\r\n            <form className=\"forms\">\r\n                <label className=\"label\">Name</label>\r\n                <input onChange={handleName} className=\"input\"\r\n                    value={name} type=\"text\" />\r\n\r\n                <label className=\"label\">Email</label>\r\n                <input onChange={handleEmail} className=\"input\"\r\n                    value={email} type=\"email\" />\r\n\r\n                <label className=\"label\">Password</label>\r\n                <input onChange={handlePassword} className=\"input\"\r\n                    value={password} type=\"password\" />\r\n                <div className=\"space\">\r\n                    <button onClick={handleSubmit} className=\"btn\" type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                    <button onClick={handleLogin} className=\"btn\" type=\"submit\">\r\n                        Login\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Form;","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Dashboard\\Header.js",[],[],"C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\Components\\Dashboard\\Add.js",["74","75","76","77"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios'\r\nimport Select from 'react-select'\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nfunction Add({ users, setUsers, setIsAdding }) {\r\n\r\n    const [salary, setSalary] = useState('');\r\n    const [loan_amnt, setloan_amnt] = useState('');\r\n    const [term, setterm] = useState(['36 months', '60 months']);\r\n    const [empl_length, setemp_length] = useState('');\r\n    const [home_ownersh, sethome_ownersh] = useState(['RENT', 'OWN', 'MORTGAGE', 'OTHER', 'NONE', 'ANY']);\r\n    const [purpose, setpurpose] = useState(['credit_card', 'car', 'small_business', 'other', 'wedding',\r\n        'debt_consolidation', 'home_improvement', 'major_purchase',\r\n        'medical', 'moving', 'vacation', 'house', 'renewable_energy',\r\n        'educational']);\r\n    const [city, setcity] = useState(['AZ', 'GA', 'IL', 'CA', 'TX', 'VA', 'MO', 'CT', 'UT', 'FL', 'NY',\r\n        'PA', 'MN', 'NJ', 'OR', 'KY', 'OH', 'SC', 'RI', 'LA', 'MA', 'WA',\r\n        'WI', 'AL', 'NV', 'CO', 'MD', 'WV', 'VT', 'MI', 'DC', 'SD', 'NC',\r\n        'AR', 'KS', 'NM', 'HI', 'AK', 'OK', 'MT', 'WY', 'NH', 'DE', 'MS',\r\n        'TN', 'IA', 'NE', 'ID', 'IN', 'ME']);\r\n    const [dti, setdti] = useState('');\r\n    const [delinq, setdelinq] = useState('');\r\n    const [revol, setrevol] = useState('');\r\n    const [totalacc, settotalacc] = useState('');\r\n    const [prevcreditlength, setprevcreditlength] = useState('');\r\n    const [verificationStatus, setverificationStatus] = useState(['verified', 'not verified'])\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [confidence, setconfidence] = useState('');\r\n    const [loanverified, setloanverified] = useState('');\r\n    const [interest_rate, setinterest_rate] = useState('');\r\n    const textInput = useRef(null);\r\n\r\n    const home_ownership_options = [\r\n        { value: 'MORTGAGE', label: 'MORTGAGE' },\r\n        { value: 'RENT', label: 'RENT' },\r\n        { value: 'OTHER', label: 'OTHER' },\r\n        { value: 'NONE', label: 'NONE' },\r\n        { value: 'ANY', label: 'ANY' },\r\n        { value: 'OWN', label: 'OWN' }\r\n    ]\r\n\r\n    const purpose_options = [\r\n        { value: 'credit_card', label: 'credit_card' },\r\n        { value: 'car', label: 'car' },\r\n        { value: 'small_business', label: 'small_business' },\r\n        { value: 'other', label: 'other' },\r\n        { value: 'wedding', label: 'wedding' },\r\n        { value: 'debt_consolidation', label: 'debt_consolidation' },\r\n        { value: 'home_improvement', label: 'home_improvement' },\r\n        { value: 'major_purchase', label: 'major_purchase' },\r\n        { value: 'medical', label: 'medical' },\r\n        { value: 'moving', label: 'moving' },\r\n        { value: 'vacation', label: 'vacation' },\r\n        { value: 'house', label: 'house' },\r\n        { value: 'renewable_energy', label: 'renewable_energy' },\r\n        { value: 'educational', label: 'educational' }\r\n    ]\r\n    const term_options = [\r\n        { value: '36 months', label: '36 months' },\r\n        { value: '60 months', label: '60 months' }\r\n    ]\r\n    const verification_status_options = [\r\n        { value: 'not verified', label: 'not verified' },\r\n        { value: 'verified', label: 'verified' },\r\n    ]\r\n\r\n    const addr_state_options = [\r\n        { value: 'AZ', label: 'AZ' },\r\n        { value: 'GA', label: 'GA' },\r\n        { value: 'IL', label: 'IL' },\r\n        { value: 'CA', label: 'CA' },\r\n        { value: 'TX', label: 'TX' },\r\n        { value: 'VA', label: 'VA' },\r\n        { value: 'MO', label: 'MO' },\r\n        { value: 'CT', label: 'CT' },\r\n        { value: 'UT', label: 'UT' },\r\n        { value: 'FL', label: 'FL' },\r\n        { value: 'NY', label: 'NY' },\r\n        { value: 'PA', label: 'PA' },\r\n        { value: 'MN', label: 'MN' },\r\n        { value: 'NJ', label: 'NJ' },\r\n        { value: 'OR', label: 'OR' },\r\n        { value: 'KY', label: 'KY' },\r\n        { value: 'OH', label: 'OH' },\r\n        { value: 'SC', label: 'SC' },\r\n        { value: 'RI', label: 'RI' },\r\n        { value: 'LA', label: 'LA' },\r\n        { value: 'MA', label: 'MA' },\r\n        { value: 'WA', label: 'WA' },\r\n        { value: 'WI', label: 'WI' },\r\n        { value: 'AL', label: 'AL' },\r\n        { value: 'NV', label: 'NV' },\r\n        { value: 'CO', label: 'CO' },\r\n        { value: 'MD', label: 'MD' },\r\n        { value: 'WV', label: 'WV' },\r\n        { value: 'VT', label: 'VT' },\r\n        { value: 'MI', label: 'MI' },\r\n        { value: 'DC', label: 'DC' },\r\n        { value: 'SD', label: 'SD' }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        textInput.current.focus();\r\n    }, [])\r\n    const handlePredict = async (e) => {\r\n        e.preventDefault();\r\n        const id = users.length + 1;\r\n\r\n        const result = await axios.get(\"http://localhost:8081/predictLoan\", {\r\n            params: {\r\n                'annual_inc': salary,\r\n                'loan_amnt': loan_amnt,\r\n                'term': term['value'],\r\n                'emp_length': empl_length,\r\n                'home_ownership': home_ownersh['value'],\r\n                'purpose': purpose['value'],\r\n                'addr_state': city['value'],\r\n                'dti': dti,\r\n                'delinq_2yrs': delinq,\r\n                'revol_util': revol,\r\n                'total_acc': totalacc,\r\n                'longest_credit_length': prevcreditlength,\r\n                'verification_status': verificationStatus['value']\r\n            }\r\n        });\r\n        let data = result['data']\r\n        setconfidence(data['confidence']);\r\n        setloanverified(data['prediction']);\r\n        setinterest_rate(data['interest_rate']);\r\n        if (result['status'] === 200) {\r\n\r\n            setVisible(true);\r\n        }\r\n\r\n\r\n\r\n        console.log(confidence, loanverified, interest_rate);\r\n\r\n        /*Swal.fire({\r\n            icon: \"success\",\r\n            title:\"Results\",\r\n            text: `${result}`, \r\n            showConfirmButton: false\r\n            //timer:15000\r\n\r\n        })*/\r\n    }\r\n    const handleSave = async (e) => {\r\n        const id = users.length + 1;\r\n        if (confidence === '' || loanverified === '') {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Results\",\r\n                text: `Kindly predict the case before submitting.`,\r\n                showConfirmButton: true,\r\n                //timer: 1500\r\n\r\n            })\r\n        } else {\r\n            let params = {\r\n                'annual_inc': salary,\r\n                'loan_amnt': loan_amnt,\r\n                'term': term['value'],\r\n                'emp_length': empl_length,\r\n                'home_ownership': home_ownersh['value'],\r\n                'purpose': purpose['value'],\r\n                'addr_state': city['value'],\r\n                'dti': dti,\r\n                'delinq_2yrs': delinq,\r\n                'revol_util': revol,\r\n                'total_acc': totalacc,\r\n                'longest_credit_length': prevcreditlength,\r\n                'verification_status': verificationStatus['value'],\r\n                'confidence': confidence,\r\n                'prediction': loanverified,\r\n                'interest_rate': interest_rate\r\n            }\r\n            const result = await axios.post(\"http://localhost:8081/saveCase\", params);\r\n            if (result['data'] === -1) {\r\n                Swal.fire({\r\n                    icon: \"error\",\r\n                    title: \"Results\",\r\n                    text: `Error occurred while saving the record!`,\r\n                    showConfirmButton: true,\r\n                    //timer:1500\r\n\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"Results\",\r\n                    text: `Case ID : ` + result['data'],\r\n                    showConfirmButton: true,\r\n                    //timer:1500\r\n\r\n                })\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"small-container\">\r\n            <form>\r\n                <h1>Predict Case</h1>\r\n                <label htmlFor=\"salary\">Annual income ($)</label>\r\n                <input\r\n                    id=\"salary\"\r\n                    type=\"number\"\r\n                    name=\"salary\"\r\n                    ref={textInput}\r\n                    value={salary}\r\n                    onChange={e => setSalary(e.target.value)}\r\n                />\r\n                <label htmlFor=\"loan_amnt\">Requested loan amount ($)</label>\r\n                <input\r\n                    id=\"loan_amnt\"\r\n                    type=\"loan_amnt\"\r\n                    name=\"loan_amnt\"\r\n                    value={loan_amnt}\r\n                    onChange={e => setloan_amnt(e.target.value)}\r\n                />\r\n                <label htmlFor=\"term\">Loan term length (months)</label>\r\n                <Select\r\n                    options={term_options}\r\n                    id=\"term\"\r\n                    type=\"term\"\r\n                    name=\"term\"\r\n                    value={term}\r\n                    onChange={e => setterm(e)}\r\n                />\r\n                <label htmlFor=\"empl_length\">Employee Length</label>\r\n                <input\r\n                    id=\"empl_length\"\r\n                    type=\"empl_length\"\r\n                    name=\"empl_length\"\r\n                    value={empl_length}\r\n                    onChange={e => setemp_length(e.target.value)}\r\n                />\r\n                <label htmlFor=\"home_ownersh\">Housing status</label>\r\n\r\n                <Select\r\n                    options={home_ownership_options}\r\n                    //id=\"home_ownersh\"\r\n                    //type=\"home_ownersh\"\r\n                    //name=\"home_ownersh\"\r\n                    value={home_ownersh}\r\n                    onChange={e => sethome_ownersh(e)}\r\n                />\r\n                <label htmlFor=\"purpose\">Purpose of loan</label>\r\n                <Select\r\n                    options={purpose_options}\r\n                    id=\"purpose\"\r\n                    type=\"purpose\"\r\n                    name=\"purpose\"\r\n                    value={purpose}\r\n                    onChange={e => setpurpose(e)}\r\n                />\r\n                <label htmlFor=\"city\">State of residence</label>\r\n                <Select\r\n                    options={addr_state_options}\r\n                    id=\"city\"\r\n                    type=\"city\"\r\n                    name=\"city\"\r\n                    value={city}\r\n                    onChange={e => setcity(e)}\r\n                />\r\n                <label htmlFor=\"dti\">Debt to income ratio</label>\r\n                <input\r\n                    id=\"dti\"\r\n                    type=\"dti\"\r\n                    name=\"dti\"\r\n                    value={dti}\r\n                    onChange={e => setdti(e.target.value)}\r\n                />\r\n                <label htmlFor=\"delinq\">Number of misdemeanor in the past 2 years</label>\r\n                <input\r\n                    id=\"delinq\"\r\n                    type=\"delinq\"\r\n                    name=\"delinq\"\r\n                    value={delinq}\r\n                    onChange={e => setdelinq(e.target.value)}\r\n                />\r\n                <label htmlFor=\"revol\">Revolving credit line utilized</label>\r\n                <input\r\n                    id=\"revol\"\r\n                    type=\"revol\"\r\n                    name=\"revol\"\r\n                    value={revol}\r\n                    onChange={e => setrevol(e.target.value)}\r\n                />\r\n                <label htmlFor=\"totalacc\">Total accounts (number of credit lines)</label>\r\n                <input\r\n                    id=\"totalacc\"\r\n                    type=\"totalacc\"\r\n                    name=\"totalacc\"\r\n                    value={totalacc}\r\n                    onChange={e => settotalacc(e.target.value)}\r\n                />\r\n                <label htmlFor=\"prevcreditlength\">Age of oldest active account</label>\r\n                <input\r\n                    id=\"prevcreditlength\"\r\n                    type=\"prevcreditlength\"\r\n                    name=\"prevcreditlength\"\r\n                    value={prevcreditlength}\r\n                    onChange={e => setprevcreditlength(e.target.value)}\r\n                />\r\n                <label htmlFor=\"verificationStatus\">Income verification status</label>\r\n                <Select\r\n                    options={verification_status_options}\r\n                    id=\"verificationStatus\"\r\n                    type=\"verificationStatus\"\r\n                    name=\"verificationStatus\"\r\n                    value={verificationStatus}\r\n                    onChange={e => setverificationStatus(e)}\r\n                />\r\n                <div style={{ display: visible ? 'block' : 'none' }}>\r\n                    <label htmlFor=\"confidence\">Confidence</label>\r\n                    <input\r\n                        disabled={true}\r\n                        id=\"confidence\"\r\n                        type=\"confidence\"\r\n                        name=\"confidence\"\r\n                        value={confidence}\r\n                    //onChange={e => setconfidence(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"loanverified\">Loan Verification Status</label>\r\n                    <input\r\n                        disabled={true}\r\n                        id=\"loanverified\"\r\n                        type=\"loanverified\"\r\n                        name=\"loanverified\"\r\n                        value={loanverified}\r\n                    //onChange={e => setloanverified(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"interest_rate\">Predicted Interest Rate</label>\r\n                    <input\r\n                        disabled={true}\r\n                        id=\"interest_rate\"\r\n                        type=\"interest_rate\"\r\n                        name=\"interest_rate\"\r\n                        value={interest_rate}\r\n                    //onChange={e => setinterest_rate(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ marginTop: '30px' }}>\r\n                    <button \r\n                    type=\"submit\" \r\n                    value=\"Predict\"\r\n                    onClick={handlePredict} \r\n                    >\r\n                        Predict</button>\r\n                    <button\r\n                        style={{ marginLeft: '12px' }}\r\n                       \r\n                        type=\"button\"\r\n                        value=\"Save\"\r\n                        onClick={handleSave}\r\n                    >Save</button>\r\n                    <button\r\n                        style={{ marginLeft: '12px' }}\r\n                       \r\n                        type=\"button\"\r\n                        value=\"Cancel\"\r\n                        onClick={() => setIsAdding(false)}\r\n                    >Cancel</button>\r\n                    \r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add\r\n","C:\\Users\\Rahul\\OneDrive\\Desktop\\spe-project\\LoanApprover\\LoanApprover\\statics\\loan-approval-system\\src\\data\\index.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":17},{"ruleId":"78","severity":1,"message":"82","line":30,"column":12,"nodeType":"80","messageId":"81","endLine":30,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":30,"column":21,"nodeType":"80","messageId":"81","endLine":30,"endColumn":31},{"ruleId":"78","severity":1,"message":"84","line":1,"column":35,"nodeType":"80","messageId":"81","endLine":1,"endColumn":44},{"ruleId":"78","severity":1,"message":"85","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"86","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"87","line":13,"column":9,"nodeType":"80","messageId":"81","endLine":13,"endColumn":15},{"ruleId":"78","severity":1,"message":"88","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"79","line":4,"column":20,"nodeType":"80","messageId":"81","endLine":4,"endColumn":27},{"ruleId":"78","severity":1,"message":"79","line":5,"column":10,"nodeType":"80","messageId":"81","endLine":5,"endColumn":17},{"ruleId":"78","severity":1,"message":"89","line":5,"column":19,"nodeType":"80","messageId":"81","endLine":5,"endColumn":30},{"ruleId":"78","severity":1,"message":"90","line":109,"column":15,"nodeType":"80","messageId":"81","endLine":109,"endColumn":17},{"ruleId":"78","severity":1,"message":"90","line":151,"column":15,"nodeType":"80","messageId":"81","endLine":151,"endColumn":17},"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'useEffect' is defined but never used.","'Select' is defined but never used.","'ReactDOM' is defined but never used.","'errors' is assigned a value but never used.","'Navigate' is defined but never used.","'useNavigate' is defined but never used.","'id' is assigned a value but never used."]